import React, { useState } from "react";
import {
  AppBar,
  Toolbar,
  IconButton,
  Typography,
  Menu,
  MenuItem,
  Button,
  Drawer,
  List,
  ListItem,
  ListItemText,
  ListItemIcon,
  Box,
  Divider,
  Container,
} from "@mui/material";
import MenuIcon from "@mui/icons-material/Menu";
import AccountCircleIcon from "@mui/icons-material/AccountCircle";
import HomeIcon from "@mui/icons-material/Home";
import InfoIcon from "@mui/icons-material/Info";
import ContactMailIcon from "@mui/icons-material/ContactMail";
import ArrowDropDownIcon from "@mui/icons-material/ArrowDropDown";
import { NavLink } from "react-router-dom";

export default function ResponsiveNav() {
  const [menuAnchors, setMenuAnchors] = useState({});
  const [isDrawerOpen, setDrawerOpen] = useState(false);
  const [isExpanded, setExpanded] = useState(false);

  const handleMenuClick = (event, menuName) => {
    setMenuAnchors((prev) => ({ ...prev, [menuName]: event.currentTarget }));
  };

  const handleMenuClose = (menuName) => {
    setMenuAnchors((prev) => ({ ...prev, [menuName]: null }));
  };

  const toggleDrawer = () => {
    setDrawerOpen(!isDrawerOpen);
    setExpanded(!isExpanded);
  };

  const menuItems = ["Profile", "Settings", "Logout"];

  const sideNavItems = [
    { text: "Home", icon: <HomeIcon fontSize="large" />, link: "/" },
    { text: "About", icon: <InfoIcon fontSize="large" />, link: "/about" },
    { text: "Contact", icon: <ContactMailIcon fontSize="large" />, link: "/contact" },
  ];

  const dropdownMenus = {
    contact: [
      { text: "Slack", link: "https://slack.com" },
      { text: "Email", link: "mailto:support@example.com" },
    ],
    about: [
      { text: "Our Team", link: "/team" },
      { text: "Careers", link: "/careers" },
    ],
  };

  return (
    <Box sx={{ display: "flex", flexDirection: "column", minHeight: "100vh" }}>
      {/* AppBar */}
      <AppBar
        position="fixed"
        sx={{ zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: "#003366" }}
      >
        <Toolbar>
          <Typography variant="h6" component="div" sx={{ flexGrow: 1 }}>
            MyApp
          </Typography>
          <Box sx={{ display: { xs: "none", sm: "block" } }}>
            <Button color="inherit">Home</Button>
            <Button
              color="inherit"
              endIcon={<ArrowDropDownIcon />}
              onClick={(e) => handleMenuClick(e, "about")}
            >
              About
            </Button>
            <Menu
              anchorEl={menuAnchors["about"]}
              open={Boolean(menuAnchors["about"])}
              onClose={() => handleMenuClose("about")}
              anchorOrigin={{ vertical: "bottom", horizontal: "left" }}
              transformOrigin={{ vertical: "top", horizontal: "left" }}
            >
              {dropdownMenus.about.map((item, index) => (
                <MenuItem key={index} component={NavLink} to={item.link} onClick={() => handleMenuClose("about")}>
                  {item.text}
                </MenuItem>
              ))}
            </Menu>
            <Button
              color="inherit"
              endIcon={<ArrowDropDownIcon />}
              onClick={(e) => handleMenuClick(e, "contact")}
            >
              Contact
            </Button>
            <Menu
              anchorEl={menuAnchors["contact"]}
              open={Boolean(menuAnchors["contact"])}
              onClose={() => handleMenuClose("contact")}
              anchorOrigin={{ vertical: "bottom", horizontal: "left" }}
              transformOrigin={{ vertical: "top", horizontal: "left" }}
            >
              {dropdownMenus.contact.map((item, index) => (
                <MenuItem
                  key={index}
                  component="a"
                  href={item.link}
                  target="_blank"
                  rel="noopener noreferrer"
                  onClick={() => handleMenuClose("contact")}
                >
                  {item.text}
                </MenuItem>
              ))}
            </Menu>
          </Box>
          <IconButton
            edge="end"
            color="inherit"
            aria-label="menu"
            onClick={toggleDrawer}
          >
            <MenuIcon />
          </IconButton>
        </Toolbar>
      </AppBar>

      {/* Side Navigation Drawer */}
      <Drawer
        anchor="right"
        open={isDrawerOpen}
        onClose={toggleDrawer}
        variant="permanent"
        sx={{
          width: isExpanded ? 240 : 60,
          flexShrink: 0,
          "& .MuiDrawer-paper": {
            width: isExpanded ? 240 : 60,
            overflowX: "hidden",
            transition: "width 0.3s",
          },
        }}
      >
        <List sx={{ marginTop: 8 }}>
          {sideNavItems.map((item, index) => (
            <ListItem
              button
              key={index}
              component={NavLink}
              to={item.link}
              sx={{ justifyContent: isExpanded ? "flex-start" : "center" }}
            >
              <ListItemIcon>{item.icon}</ListItemIcon>
              {isExpanded && <ListItemText primary={item.text} />}
            </ListItem>
          ))}
        </List>
      </Drawer>
    </Box>
  );
}
